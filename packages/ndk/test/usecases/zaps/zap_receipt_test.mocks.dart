// Mocks generated by Mockito 5.4.6 from annotations
// in ndk/test/usecases/zaps/zap_receipt_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:ndk/domain_layer/entities/nip_01_event.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNip01Event_0 extends _i1.SmartFake implements _i2.Nip01Event {
  _FakeNip01Event_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Nip01Event].
///
/// See the documentation for Mockito's code generation for more information.
class MockNip01Event extends _i1.Mock implements _i2.Nip01Event {
  MockNip01Event() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get pubKey => (super.noSuchMethod(
        Invocation.getter(#pubKey),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#pubKey),
        ),
      ) as String);

  @override
  int get createdAt => (super.noSuchMethod(
        Invocation.getter(#createdAt),
        returnValue: 0,
      ) as int);

  @override
  int get kind => (super.noSuchMethod(
        Invocation.getter(#kind),
        returnValue: 0,
      ) as int);

  @override
  List<List<String>> get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: <List<String>>[],
      ) as List<List<String>>);

  @override
  String get content => (super.noSuchMethod(
        Invocation.getter(#content),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#content),
        ),
      ) as String);

  @override
  String get sig => (super.noSuchMethod(
        Invocation.getter(#sig),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#sig),
        ),
      ) as String);

  @override
  List<String> get sources => (super.noSuchMethod(
        Invocation.getter(#sources),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool get isIdValid => (super.noSuchMethod(
        Invocation.getter(#isIdValid),
        returnValue: false,
      ) as bool);

  @override
  List<String> get tTags => (super.noSuchMethod(
        Invocation.getter(#tTags),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> get pTags => (super.noSuchMethod(
        Invocation.getter(#pTags),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<String> get replyETags => (super.noSuchMethod(
        Invocation.getter(#replyETags),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set id(String? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set createdAt(int? _createdAt) => super.noSuchMethod(
        Invocation.setter(
          #createdAt,
          _createdAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tags(List<List<String>>? _tags) => super.noSuchMethod(
        Invocation.setter(
          #tags,
          _tags,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set content(String? _content) => super.noSuchMethod(
        Invocation.setter(
          #content,
          _content,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set sig(String? _sig) => super.noSuchMethod(
        Invocation.setter(
          #sig,
          _sig,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set validSig(bool? _validSig) => super.noSuchMethod(
        Invocation.setter(
          #validSig,
          _validSig,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set sources(List<String>? _sources) => super.noSuchMethod(
        Invocation.setter(
          #sources,
          _sources,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  String toBase64() => (super.noSuchMethod(
        Invocation.method(
          #toBase64,
          [],
        ),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.method(
            #toBase64,
            [],
          ),
        ),
      ) as String);

  @override
  void sign(String? privateKey) => super.noSuchMethod(
        Invocation.method(
          #sign,
          [privateKey],
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> getTags(String? tag) => (super.noSuchMethod(
        Invocation.method(
          #getTags,
          [tag],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  String? getFirstTag(String? name) => (super.noSuchMethod(Invocation.method(
        #getFirstTag,
        [name],
      )) as String?);

  @override
  _i2.Nip01Event copyWith({
    String? pubKey,
    int? createdAt,
    int? kind,
    List<List<String>>? tags,
    String? content,
    String? sig,
    List<String>? sources,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #pubKey: pubKey,
            #createdAt: createdAt,
            #kind: kind,
            #tags: tags,
            #content: content,
            #sig: sig,
            #sources: sources,
          },
        ),
        returnValue: _FakeNip01Event_0(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #pubKey: pubKey,
              #createdAt: createdAt,
              #kind: kind,
              #tags: tags,
              #content: content,
              #sig: sig,
              #sources: sources,
            },
          ),
        ),
      ) as _i2.Nip01Event);
}
